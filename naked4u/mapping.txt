# compiler: R8
# compiler_version: 1.5.68
# pg_map_id: 1e9205f
io.popbrain.naked4u.BaseBasicViewableLogger -> io.popbrain.naked4u.BaseBasicViewableLogger:
    1:1:void io.popbrain.naked4u.DisplayUtil.<init>(android.content.Context):0:0 -> setup
    1:1:void setup(android.content.Context,android.util.AttributeSet,int):0 -> setup
    2:2:io.popbrain.naked4u.DisplayUtil$Bound io.popbrain.naked4u.DisplayUtil.screenSize():0:0 -> setup
    2:2:void io.popbrain.naked4u.DisplayUtil.<init>(android.content.Context):0 -> setup
    2:2:void setup(android.content.Context,android.util.AttributeSet,int):0 -> setup
    3:3:float io.popbrain.naked4u.DisplayUtil.density():0:0 -> setup
    3:3:void io.popbrain.naked4u.DisplayUtil.<init>(android.content.Context):0 -> setup
    3:3:void setup(android.content.Context,android.util.AttributeSet,int):0 -> setup
    4:4:void setup(android.content.Context,android.util.AttributeSet,int):0:0 -> setup
    5:5:void io.popbrain.naked4u.DisplayUtil.<init>(android.content.Context):0:0 -> setup
    5:5:void setup(android.content.Context,android.util.AttributeSet,int):0 -> setup
io.popbrain.naked4u.BaseBasicViewableLogger$setup$2 -> io.popbrain.naked4u.BaseBasicViewableLogger$a:
    io.popbrain.naked4u.BaseBasicViewableLogger this$0 -> a
io.popbrain.naked4u.ClearButton -> a.a.a.a:
    io.popbrain.naked4u.ClearButton$Companion Companion -> a
    1:1:void setup():0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void io.popbrain.naked4u.DisplayUtil.<init>(android.content.Context):0:0 -> <init>
    2:2:void setup():0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    3:3:io.popbrain.naked4u.DisplayUtil$Bound io.popbrain.naked4u.DisplayUtil.screenSize():0:0 -> <init>
    3:3:void io.popbrain.naked4u.DisplayUtil.<init>(android.content.Context):0 -> <init>
    3:3:void setup():0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:4:float io.popbrain.naked4u.DisplayUtil.density():0:0 -> <init>
    4:4:void io.popbrain.naked4u.DisplayUtil.<init>(android.content.Context):0 -> <init>
    4:4:void setup():0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    5:5:void setup():0:0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    6:6:void io.popbrain.naked4u.DisplayUtil.<init>(android.content.Context):0:0 -> <init>
    6:6:void setup():0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    int access$getDefaultDidth$cp() -> a
    int access$getDefaultHeight$cp() -> b
io.popbrain.naked4u.ClearButton$Companion -> a.a.a.a$a:
    1:1:void <init>():0:0 -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0 -> <init>
    int getDefaultDidth() -> a
    int getDefaultHeight() -> b
io.popbrain.naked4u.InnerLogger -> a.a.a.b:
    io.popbrain.naked4u.InnerLogger$Companion Companion -> a
    java.lang.String access$getTAG$cp() -> a
io.popbrain.naked4u.InnerLogger$Companion -> a.a.a.b$a:
    1:1:void <init>():0:0 -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0 -> <init>
    1:1:java.lang.String getTAG():0:0 -> a
    1:1:int e(java.lang.String,java.lang.Throwable):0 -> a
    2:2:int e(java.lang.String,java.lang.Throwable):0:0 -> a
    java.lang.String getTAG() -> a
io.popbrain.naked4u.Log -> a.a.a.c:
    io.popbrain.naked4u.LogType type -> a
    java.lang.String contents -> b
io.popbrain.naked4u.LogType$Companion -> io.popbrain.naked4u.LogType$a:
    1:1:void <init>():0:0 -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0 -> <init>
    io.popbrain.naked4u.LogType get(int) -> a
io.popbrain.naked4u.UtilsKt -> a.a.a.e:
    java.lang.String toColorString(int) -> a
io.popbrain.naked4u.UtilsKt$runOnUIThread$1 -> a.a.a.d:
    kotlin.jvm.functions.Function0 $action -> a
io.popbrain.naked4u.ViewableLogger -> io.popbrain.naked4u.ViewableLogger:
    1:1:void io.popbrain.naked4u.ViewableLoggerViewModel.<init>(android.content.Context,io.popbrain.naked4u.ViewableLoggerAdapter,android.util.AttributeSet,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    1:1:void <init>(android.content.Context):0 -> <init>
    2:2:void <init>(android.content.Context):0:0 -> <init>
    3:3:void io.popbrain.naked4u.ViewableLoggerViewModel.setListener(io.popbrain.naked4u.OnViewableLoggerListener):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void io.popbrain.naked4u.ViewableLoggerViewModel.clear():0:0 -> clear
    1:1:io.popbrain.naked4u.ViewableLogger clear():0 -> clear
    2:2:int io.popbrain.naked4u.ViewableLoggerAdapter.getItemCount():0:0 -> clear
    2:2:void io.popbrain.naked4u.ViewableLoggerAdapter.clear():0 -> clear
    2:2:void io.popbrain.naked4u.ViewableLoggerViewModel.clear():0 -> clear
    2:2:io.popbrain.naked4u.ViewableLogger clear():0 -> clear
    3:3:void io.popbrain.naked4u.ViewableLoggerAdapter.clear():0:0 -> clear
    3:3:void io.popbrain.naked4u.ViewableLoggerViewModel.clear():0 -> clear
    3:3:io.popbrain.naked4u.ViewableLogger clear():0 -> clear
    4:4:void io.popbrain.naked4u.ViewableLoggerViewModel.clear():0:0 -> clear
    4:4:io.popbrain.naked4u.ViewableLogger clear():0 -> clear
    1:1:void io.popbrain.naked4u.ViewableLoggerViewModel.clearExclusion():0:0 -> clearExclusion
    1:1:void clearExclusion():0 -> clearExclusion
    1:1:void io.popbrain.naked4u.ViewableLoggerViewModel.clearFilter():0:0 -> clearFilter
    1:1:void clearFilter():0 -> clearFilter
    1:1:void io.popbrain.naked4u.ViewableLoggerViewModel.finish():0:0 -> onViewDetachedFromWindow
    1:1:void onViewDetachedFromWindow(android.view.View):0 -> onViewDetachedFromWindow
    2:2:void onViewDetachedFromWindow(android.view.View):0:0 -> onViewDetachedFromWindow
    1:1:void io.popbrain.naked4u.ViewableLoggerViewModel.setDebugColor(int):0:0 -> setDebugColor
    1:1:io.popbrain.naked4u.ViewableLogger setDebugColor(int):0 -> setDebugColor
    1:1:void io.popbrain.naked4u.ViewableLoggerViewModel.setErrorColor(int):0:0 -> setErrorColor
    1:1:io.popbrain.naked4u.ViewableLogger setErrorColor(int):0 -> setErrorColor
    1:1:void io.popbrain.naked4u.ViewableLoggerViewModel.setInfoColor(int):0:0 -> setInfoColor
    1:1:io.popbrain.naked4u.ViewableLogger setInfoColor(int):0 -> setInfoColor
    1:1:void io.popbrain.naked4u.ViewableLoggerViewModel.setWarnColor(int):0:0 -> setWarnColor
    1:1:io.popbrain.naked4u.ViewableLogger setWarnColor(int):0 -> setWarnColor
    1:1:void io.popbrain.naked4u.ViewableLoggerViewModel.start():0:0 -> start
    1:1:void start():0 -> start
    2:2:java.io.BufferedReader io.popbrain.naked4u.ViewableLoggerViewModel.getLogReader():0:0 -> start
    2:2:void io.popbrain.naked4u.ViewableLoggerViewModel.logging():0 -> start
    2:2:void io.popbrain.naked4u.ViewableLoggerViewModel.start():0 -> start
    2:2:void start():0 -> start
    3:3:void io.popbrain.naked4u.ViewableLoggerViewModel.logging():0:0 -> start
    3:3:void io.popbrain.naked4u.ViewableLoggerViewModel.start():0 -> start
    3:3:void start():0 -> start
    4:4:java.lang.Runnable io.popbrain.naked4u.ViewableLoggerViewModel.runnable():0:0 -> start
    4:4:void io.popbrain.naked4u.ViewableLoggerViewModel.logging():0 -> start
    4:4:void io.popbrain.naked4u.ViewableLoggerViewModel.start():0 -> start
    4:4:void start():0 -> start
    5:5:void io.popbrain.naked4u.ViewableLoggerViewModel.logging():0:0 -> start
    5:5:void io.popbrain.naked4u.ViewableLoggerViewModel.start():0 -> start
    5:5:void start():0 -> start
    1:1:void io.popbrain.naked4u.ViewableLoggerViewModel.stop():0:0 -> stop
    1:1:void stop():0 -> stop
io.popbrain.naked4u.ViewableLoggerAdapter -> a.a.a.f:
    android.view.LayoutInflater inflater -> a
    java.util.ArrayList logs -> c
    java.lang.String rowBackgroundColor -> b
    java.util.ArrayList getLogs() -> a
    void setRowBackgroundColor(java.lang.String) -> a
    1:1:io.popbrain.naked4u.LogType io.popbrain.naked4u.Log.getType():0:0 -> getItemViewType
    1:1:int getItemViewType(int):0 -> getItemViewType
    2:2:int getItemViewType(int):0:0 -> getItemViewType
    1:1:android.widget.TextView io.popbrain.naked4u.ViewableLoggerAdapter$LogViewHolder.getLog():0:0 -> onBindViewHolder
    1:1:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int):0 -> onBindViewHolder
    2:2:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int):0:0 -> onBindViewHolder
    3:3:java.lang.String io.popbrain.naked4u.Log.getContents():0:0 -> onBindViewHolder
    3:3:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int):0 -> onBindViewHolder
    4:4:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int):0:0 -> onBindViewHolder
    5:5:android.widget.TextView io.popbrain.naked4u.ViewableLoggerAdapter$LogViewHolder.getLog():0:0 -> onBindViewHolder
    5:5:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int):0 -> onBindViewHolder
    6:6:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int):0:0 -> onBindViewHolder
    7:7:io.popbrain.naked4u.LogType io.popbrain.naked4u.Log.getType():0:0 -> onBindViewHolder
    7:7:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int):0 -> onBindViewHolder
    8:8:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int):0:0 -> onBindViewHolder
    9:9:android.widget.TextView io.popbrain.naked4u.ViewableLoggerAdapter$LogViewHolder.getLog():0:0 -> onBindViewHolder
    9:9:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int):0 -> onBindViewHolder
    10:10:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int):0:0 -> onBindViewHolder
    1:1:int getLayout(int):0:0 -> onCreateViewHolder
    1:1:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int):0 -> onCreateViewHolder
    2:2:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int):0:0 -> onCreateViewHolder
io.popbrain.naked4u.ViewableLoggerAdapter$LogViewHolder -> a.a.a.f$a:
    android.widget.TextView log -> a
io.popbrain.naked4u.ViewableLoggerAdapter$WhenMappings -> a.a.a.g:
    int[] $EnumSwitchMapping$0 -> a
io.popbrain.naked4u.ViewableLoggerViewModel -> a.a.a.i:
    java.lang.String logPatternStr -> g
    int errorColor -> n
    java.lang.String backgroundColor -> i
    int infoColor -> l
    int warnColor -> m
    int debugColor -> k
    java.util.ArrayList defaultExclusionWords -> e
    java.util.ArrayList exclusionWords -> d
    java.util.ArrayList filterWords -> c
    io.popbrain.naked4u.LogType filterType -> f
    java.util.regex.Pattern logPattern -> h
    io.popbrain.naked4u.OnViewableLoggerListener listener -> j
    java.util.Date startTime -> o
    java.io.BufferedReader logReader -> a
    io.popbrain.naked4u.ViewableLoggerAdapter adapter -> p
    boolean done -> b
    1:1:void initAttr(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    1:1:void <init>(android.content.Context,io.popbrain.naked4u.ViewableLoggerAdapter,android.util.AttributeSet):0 -> <init>
    2:2:boolean addFilter(java.lang.String):0:0 -> <init>
    2:2:void initAttr(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:void <init>(android.content.Context,io.popbrain.naked4u.ViewableLoggerAdapter,android.util.AttributeSet):0 -> <init>
    3:3:void initAttr(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    3:3:void <init>(android.content.Context,io.popbrain.naked4u.ViewableLoggerAdapter,android.util.AttributeSet):0 -> <init>
    4:4:void filterByType(io.popbrain.naked4u.LogType):0:0 -> <init>
    4:4:void initAttr(android.content.Context,android.util.AttributeSet):0 -> <init>
    4:4:void <init>(android.content.Context,io.popbrain.naked4u.ViewableLoggerAdapter,android.util.AttributeSet):0 -> <init>
    5:5:void initAttr(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    5:5:void <init>(android.content.Context,io.popbrain.naked4u.ViewableLoggerAdapter,android.util.AttributeSet):0 -> <init>
    1:1:io.popbrain.naked4u.LogType getLogType(java.lang.String):0:0 -> a
    1:1:io.popbrain.naked4u.LogType access$getLogType(io.popbrain.naked4u.ViewableLoggerViewModel,java.lang.String):0 -> a
    2:2:boolean isTargetType(io.popbrain.naked4u.LogType):0:0 -> a
    2:2:boolean access$isTargetType(io.popbrain.naked4u.ViewableLoggerViewModel,io.popbrain.naked4u.LogType):0 -> a
    boolean addExclusion(java.lang.String) -> a
    boolean addExclusion(java.lang.String[]) -> a
    void backgroundColor(android.graphics.drawable.Drawable) -> a
    void filterByType(io.popbrain.naked4u.LogType) -> a
    boolean addFilter(java.lang.String) -> b
    boolean addFilter(java.lang.String[]) -> b
    java.util.Date getDate(java.lang.String) -> c
    boolean isContainTargetWord(java.lang.String) -> d
    boolean isValidLog(java.lang.String) -> e
io.popbrain.naked4u.ViewableLoggerViewModel$runnable$1 -> a.a.a.h:
    io.popbrain.naked4u.ViewableLoggerViewModel this$0 -> a
    1:1:boolean io.popbrain.naked4u.ViewableLoggerViewModel.access$getDone$p(io.popbrain.naked4u.ViewableLoggerViewModel):0:0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
    3:3:java.io.BufferedReader io.popbrain.naked4u.ViewableLoggerViewModel.access$getLogReader$p(io.popbrain.naked4u.ViewableLoggerViewModel):0:0 -> run
    3:3:void run():0 -> run
    4:4:void run():0:0 -> run
    5:5:java.io.BufferedReader io.popbrain.naked4u.ViewableLoggerViewModel.access$getLogReader$p(io.popbrain.naked4u.ViewableLoggerViewModel):0:0 -> run
    5:5:void run():0 -> run
    6:6:void run():0:0 -> run
    7:7:boolean io.popbrain.naked4u.ViewableLoggerViewModel.access$isValidLog(io.popbrain.naked4u.ViewableLoggerViewModel,java.lang.String):0:0 -> run
    7:7:void run():0 -> run
    8:8:void run():0:0 -> run
    9:9:boolean io.popbrain.naked4u.ViewableLoggerViewModel.access$isContainTargetWord(io.popbrain.naked4u.ViewableLoggerViewModel,java.lang.String):0:0 -> run
    9:9:void run():0 -> run
    10:10:void run():0:0 -> run
    11:11:io.popbrain.naked4u.OnViewableLoggerListener io.popbrain.naked4u.ViewableLoggerViewModel.getListener():0:0 -> run
    11:11:void run():0 -> run
    12:12:void run():0:0 -> run
    13:13:void io.popbrain.naked4u.UtilsKt.runOnUIThread(kotlin.jvm.functions.Function0):0:0 -> run
    13:13:void run():0 -> run
    14:14:boolean io.popbrain.naked4u.UtilsKt.isUIThread():0:0 -> run
    14:14:void io.popbrain.naked4u.UtilsKt.runOnUIThread(kotlin.jvm.functions.Function0):0 -> run
    14:14:void run():0 -> run
    15:15:void io.popbrain.naked4u.UtilsKt.runOnUIThread(kotlin.jvm.functions.Function0):0:0 -> run
    15:15:void run():0 -> run
    16:16:void run():0:0 -> run
io.popbrain.naked4u.ViewableLoggerViewModel$runnable$1$1 -> a.a.a.h$a:
    io.popbrain.naked4u.LogType $logType -> b
    java.lang.String $logLine -> c
    io.popbrain.naked4u.ViewableLoggerViewModel$runnable$1 this$0 -> a
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:void io.popbrain.naked4u.ViewableLoggerViewModel.addLog(io.popbrain.naked4u.Log):0:0 -> invoke
    2:2:void io.popbrain.naked4u.ViewableLoggerViewModel.access$addLog(io.popbrain.naked4u.ViewableLoggerViewModel,io.popbrain.naked4u.Log):0 -> invoke
    2:2:void invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:java.lang.Object invoke():0:0 -> invoke
